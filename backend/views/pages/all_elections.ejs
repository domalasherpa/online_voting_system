<!-- all_elections.ejs -->

<div class="container">
    <h1>Election Details</h1>
    <div class="search-container">
        <input type="text" class="search-input" placeholder="Search by Name">
    </div>
    <table class="election-table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Start Date</th>
                <th>End Date</th>
                <th>Organization</th>
                <th>Candidate Count</th>
                <th>Voter Count</th>
            </tr>
        </thead>
        <tbody class="election-cards">
            <!-- election details will be dynamically inserted here -->
        </tbody>
    </table>
</div>

<script>
    // Fetch elections data
    fetch('/api/v1/elections')
        .then(response => response.json())
        .then(elections => {
            const electionCards = document.querySelector('.election-cards');
            const searchInput = document.querySelector('.search-input');

            // Function to filter elections based on search query
            function filterElections(query) {
                const filteredElections = elections.filter(election =>
                    election.name.toLowerCase().includes(query.toLowerCase())
                );
                displayElections(filteredElections);
            }

            // Function to display elections
            function displayElections(elections) {
                electionCards.innerHTML = '';
                elections.forEach(election => {
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td>${election.name}</td>
                        <td>${election.startDate}</td>
                        <td>${election.endDate}</td>
                        <td>${election.organization}</td>
                        <td>${election.candidateCount}</td>
                        <td>${election.voterCount}</td>
                    `;
                    electionCards.appendChild(row);
                });
            }

            // Initial display of all elections
            displayElections(elections);

            // Event listener for search input
            searchInput.addEventListener('input', () => {
                filterElections(searchInput.value);
            });
        })
        .catch(error => console.error('Error fetching elections:', error));
</script>
